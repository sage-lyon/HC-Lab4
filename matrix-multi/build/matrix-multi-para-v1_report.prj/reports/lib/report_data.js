var areaJSON={"columns":["", "ALUTs", "FFs", "RAMs", "DSPs", "MLABs", "Details"], "debug_enabled":"true", "type":"module", "total_percent":[45.2728, 23.8872, 22.8725, 26.0229, 9.55204], "total":[202672, 390846, 706, 145, 71], "name":"Kernel System", "max_resources":[854400, 1708800, 2713, 1518, 42720], "children":[{"name":"Static Partition", "type":"partition", "children":[{"name":"Board interface", "type":"resource", "data":[179950, 358572, 492, 123, 0], "details":[{"type":"text", "text":"Platform interface logic."}]}]}, {"name":"Global interconnect", "type":"resource", "data":[12524, 15522, 104, 0, 0], "details":[{"type":"text", "text":"Global interconnect for 3 global loads and 1 global store. Reduce number of global loads and stores to simplify global interconnect."}, {"type":"brief", "text":"For 3 global loads and 1 global store."}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Global Memory Interconnect", "link":"file:////glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/lib/oclfpga/aoc_help_pages/hnj1476724450050.html"}]}]}, {"name":"System description ROM", "type":"resource", "data":[0, 67, 2, 0, 0], "details":[{"type":"text", "text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program."}, {"type":"brief", "text":"Contains information for the host."}]}, {"name":"MMpara_v1", "compute_units":1, "type":"function", "total_percent":[2.219, 1.35978, 0.976416, 3.98083, 1.44928], "total_kernel_resources":[10198, 16685, 108, 22, 71], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"brief", "text":"1 compute unit."}], "children":[{"name":"Function overhead", "type":"resource", "data":[1338, 2411, 0, 0, 10], "details":[{"type":"text", "text":"Kernel dispatch logic."}, {"type":"brief", "text":"Kernel dispatch logic."}]}, {"name":"MMpara_v1.B1", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[92, 472, 3, 0, 4], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[92, 472, 3, 0, 4]}]}, {"name":"Cluster logic", "type":"resource", "data":[16, 12, 0, 0, 9], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"handler.hpp:973 > matrix-multi-para-v1.cpp:80", "type":"resource", "data":[895, 4178, 15, 1, 31], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":973}, {"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "line":80}]], "children":[{"name":"32-bit Floating-point Add", "type":"resource", "count":1, "data":[0, 0, 0, 1, 0]}, {"name":"Load", "type":"resource", "count":1, "data":[504, 2050, 15, 0, 0], "details":[{"type":"text", "text":"Load uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}, {"name":"Store", "type":"resource", "count":1, "data":[391, 2128, 0, 0, 31], "details":[{"type":"text", "text":"Store uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}, {"name":"handler.hpp:973 > matrix-multi-para-v1.cpp:80 > \\naccessor.hpp:329 > accessor.hpp:1551 > \\naccessor.hpp:840", "type":"resource", "data":[338, 88, 0, 5, 0], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":973}, {"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "line":80}, {"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp", "line":329}, {"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp", "line":1551}, {"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp", "line":840}]], "children":[{"name":"64-bit Integer Add", "type":"resource", "count":3, "data":[188, 0, 0, 0, 0]}, {"name":"64-bit Integer Multiply", "type":"resource", "count":1, "data":[150, 88, 0, 5, 0]}], "replace_name":"true"}, {"name":"handler.hpp:973 > matrix-multi-para-v1.cpp:80 > \\naccessor.hpp:329 > accessor.hpp:1552", "type":"resource", "data":[62, 0, 0, 0, 0], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":973}, {"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "line":80}, {"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp", "line":329}, {"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp", "line":1552}]], "children":[{"name":"Pointer Computation", "type":"resource", "count":1, "data":[62, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"handler.hpp:973 > matrix-multi-para-v1.cpp:80 > \\naccessor.hpp:344 > accessor.hpp:1558 > \\naccessor.hpp:840", "type":"resource", "data":[338, 88, 0, 5, 0], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":973}, {"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "line":80}, {"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp", "line":344}, {"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp", "line":1558}, {"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp", "line":840}]], "children":[{"name":"64-bit Integer Add", "type":"resource", "count":3, "data":[188, 0, 0, 0, 0]}, {"name":"64-bit Integer Multiply", "type":"resource", "count":1, "data":[150, 88, 0, 5, 0]}], "replace_name":"true"}, {"name":"handler.hpp:973 > matrix-multi-para-v1.cpp:80 > \\naccessor.hpp:344 > accessor.hpp:1559", "type":"resource", "data":[62, 0, 0, 0, 0], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":973}, {"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "line":80}, {"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp", "line":344}, {"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp", "line":1559}]], "children":[{"name":"Pointer Computation", "type":"resource", "count":1, "data":[62, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"MMpara_v1.B2", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[140, 643, 6, 0, 8], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[140, 643, 6, 0, 8]}]}, {"name":"Cluster logic", "type":"resource", "data":[16, 12, 0, 0, 9], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"handler.hpp:973 > matrix-multi-para-v1.cpp:77", "type":"resource", "data":[15, 1, 0, 0, 0], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":973}, {"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "line":77}]], "children":[{"name":"64-bit Integer Compare", "type":"resource", "count":1, "data":[15, 1, 0, 0, 0]}], "replace_name":"true"}, {"name":"handler.hpp:973 > matrix-multi-para-v1.cpp:78", "type":"resource", "data":[6086, 8604, 84, 1, 0], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":973}, {"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "line":78}]], "children":[{"name":"32-bit Floating-point Multiply-Add", "type":"resource", "count":2, "data":[0, 0, 0, 1, 0]}, {"name":"Load", "type":"resource", "count":2, "data":[6086, 8604, 84, 0, 0], "details":[{"type":"text", "text":"Load uses a Burst-coalesced cached LSU.  Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}, {"type":"brief", "text":"Burst-coalesced cached LSU,\\nLoad with a private 512 kilobit cache"}]}], "replace_name":"true"}, {"name":"handler.hpp:973 > matrix-multi-para-v1.cpp:78 > \\naccessor.hpp:344 > accessor.hpp:1558 > \\naccessor.hpp:840", "type":"resource", "data":[676, 176, 0, 10, 0], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":973}, {"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "line":78}, {"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp", "line":344}, {"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp", "line":1558}, {"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp", "line":840}]], "children":[{"name":"64-bit Integer Add", "type":"resource", "count":6, "data":[376, 0, 0, 0, 0]}, {"name":"64-bit Integer Multiply", "type":"resource", "count":2, "data":[300, 176, 0, 10, 0]}], "replace_name":"true"}, {"name":"handler.hpp:973 > matrix-multi-para-v1.cpp:78 > \\naccessor.hpp:344 > accessor.hpp:1559", "type":"resource", "data":[124, 0, 0, 0, 0], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":973}, {"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "line":78}, {"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp", "line":344}, {"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp", "line":1559}]], "children":[{"name":"Pointer Computation", "type":"resource", "count":2, "data":[124, 0, 0, 0, 0]}], "replace_name":"true"}]}]}]}]};
var area_srcJSON={"children":[{"children":[{"data":[179950,358572,492,123,0],"details":[{"text":"Platform interface logic.","type":"text"}],"name":"Board interface","type":"resource"}],"name":"Static Partition","type":"partition"},{"data":[12524,15522,104,0,0],"details":[{"text":"Global interconnect for 3 global loads and 1 global store. Reduce number of global loads and stores to simplify global interconnect.","type":"text"},{"text":"For 3 global loads and 1 global store.","type":"brief"},{"links":[{"guide":"Best Practices Guide : Global Memory Interconnect","link":"file:////glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/lib/oclfpga/aoc_help_pages/hnj1476724450050.html"}],"text":"See %L for more information","type":"text"}],"name":"Global interconnect","type":"resource"},{"data":[0,67,2,0,0],"details":[{"text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program.","type":"text"},{"text":"Contains information for the host.","type":"brief"}],"name":"System description ROM","type":"resource"},{"children":[{"data":[32,24,0,0,18],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[1338,2411,0,0,10],"details":[{"text":"Kernel dispatch logic.","type":"text"},{"text":"Kernel dispatch logic.","type":"brief"}],"name":"Function overhead","type":"resource"},{"children":[{"count":2,"data":[232,1115,9,0,12],"debug":[[{"filename":"","line":0}]],"name":"State","type":"resource"}],"data":[232,1115,9,0,12],"name":"No Source Line","type":"resource"},{"children":[{"children":[{"count":1,"data":[0,0,0,1,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"973"}]],"name":"32-bit Floating-point Add","type":"resource"},{"count":1,"data":[504,2050,15,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"973"}]],"name":"Load","type":"resource"},{"count":1,"data":[391,2128,0,0,31],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"973"}]],"name":"Store","type":"resource"}],"data":[895,4178,15,1,31],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":973},{"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp","line":80}]],"name":"handler.hpp:973 > matrix-multi-para-v1.cpp:80","replace_name":true,"type":"resource"},{"children":[{"count":3,"data":[188,0,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"973"}]],"name":"64-bit Integer Add","type":"resource"},{"count":1,"data":[150,88,0,5,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"973"}]],"name":"64-bit Integer Multiply","type":"resource"}],"data":[338,88,0,5,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":973},{"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp","line":80},{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp","line":329},{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp","line":1551},{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp","line":840}]],"name":"handler.hpp:973 > matrix-multi-para-v1.cpp:80 > \\naccessor.hpp:329 > accessor.hpp:1551 > \\naccessor.hpp:840","replace_name":true,"type":"resource"},{"children":[{"count":1,"data":[62,0,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"973"}]],"name":"Pointer Computation","type":"resource"}],"data":[62,0,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":973},{"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp","line":80},{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp","line":329},{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp","line":1552}]],"name":"handler.hpp:973 > matrix-multi-para-v1.cpp:80 > \\naccessor.hpp:329 > accessor.hpp:1552","replace_name":true,"type":"resource"},{"children":[{"count":3,"data":[188,0,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"973"}]],"name":"64-bit Integer Add","type":"resource"},{"count":1,"data":[150,88,0,5,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"973"}]],"name":"64-bit Integer Multiply","type":"resource"}],"data":[338,88,0,5,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":973},{"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp","line":80},{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp","line":344},{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp","line":1558},{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp","line":840}]],"name":"handler.hpp:973 > matrix-multi-para-v1.cpp:80 > \\naccessor.hpp:344 > accessor.hpp:1558 > \\naccessor.hpp:840","replace_name":true,"type":"resource"},{"children":[{"count":1,"data":[62,0,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"973"}]],"name":"Pointer Computation","type":"resource"}],"data":[62,0,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":973},{"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp","line":80},{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp","line":344},{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp","line":1559}]],"name":"handler.hpp:973 > matrix-multi-para-v1.cpp:80 > \\naccessor.hpp:344 > accessor.hpp:1559","replace_name":true,"type":"resource"},{"children":[{"count":1,"data":[15,1,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"973"}]],"name":"64-bit Integer Compare","type":"resource"}],"data":[15,1,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":973},{"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp","line":77}]],"name":"handler.hpp:973 > matrix-multi-para-v1.cpp:77","replace_name":true,"type":"resource"},{"children":[{"count":2,"data":[0,0,0,1,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"973"}]],"name":"32-bit Floating-point Multiply-Add","type":"resource"},{"count":2,"data":[6086,8604,84,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"973"}]],"name":"Load","type":"resource"}],"data":[6086,8604,84,1,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":973},{"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp","line":78}]],"name":"handler.hpp:973 > matrix-multi-para-v1.cpp:78","replace_name":true,"type":"resource"},{"children":[{"count":6,"data":[376,0,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"973"}]],"name":"64-bit Integer Add","type":"resource"},{"count":2,"data":[300,176,0,10,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"973"}]],"name":"64-bit Integer Multiply","type":"resource"}],"data":[676,176,0,10,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":973},{"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp","line":78},{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp","line":344},{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp","line":1558},{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp","line":840}]],"name":"handler.hpp:973 > matrix-multi-para-v1.cpp:78 > \\naccessor.hpp:344 > accessor.hpp:1558 > \\naccessor.hpp:840","replace_name":true,"type":"resource"},{"children":[{"count":2,"data":[124,0,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":"973"}]],"name":"Pointer Computation","type":"resource"}],"data":[124,0,0,0,0],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":973},{"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp","line":78},{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp","line":344},{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/accessor.hpp","line":1559}]],"name":"handler.hpp:973 > matrix-multi-para-v1.cpp:78 > \\naccessor.hpp:344 > accessor.hpp:1559","replace_name":true,"type":"resource"}],"data":[8596,13135,99,22,31],"debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp","line":973}]],"name":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp:973","replace_name":"true","type":"resource"}],"compute_units":1,"data":[10198,16685,108,22,71],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"1 compute unit.","type":"brief"}],"name":"MMpara_v1","total_kernel_resources":[10198,16685,108,22,71],"total_percent":[2.219,1.35978,0.976416,3.98083,1.44928],"type":"function"}],"columns":["","ALUTs","FFs","RAMs","DSPs","MLABs","Details"],"data":[22722,32274,214,22,71],"debug_enabled":"true","max_resources":[854400,1708800,2713,1518,42720],"name":"Kernel System","total":[202672,390846,706,145,71],"total_percent":[45.2728,23.8872,22.8725,26.0229,9.55204],"type":"module"};
var mavJSON={"nodes":[{"type":"kernel", "id":2, "name":"MMpara_v1", "children":[{"type":"bb", "id":3, "name":"MMpara_v1.B0", "details":[{"type":"table", "Latency":"1"}]}, {"type":"bb", "id":4, "name":"MMpara_v1.B1", "children":[{"type":"inst", "id":6, "name":"Load", "debug":[[{"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "line":80}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"10", "Latency":"238", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"file:////glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/lib/oclfpga/aoc_help_pages/yeo1491314105959.html"}]}]}]}, {"type":"inst", "id":7, "name":"Store", "debug":[[{"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "line":80}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"255", "Latency":"2", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"file:////glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/lib/oclfpga/aoc_help_pages/yeo1491314105959.html"}]}]}]}, {"type":"inst", "id":10, "name":"Begin", "details":[{"type":"table", "Start Cycle":"0", "Latency":"1"}]}, {"type":"inst", "id":11, "name":"End", "details":[{"type":"table", "Start Cycle":"257", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"257"}]}, {"type":"bb", "id":5, "name":"MMpara_v1.B2", "children":[{"type":"inst", "id":8, "name":"Load", "debug":[[{"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "line":78}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Burst-coalesced cached", "Stall-free":"No", "Start Cycle":"11", "Latency":"238", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"file:////glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/lib/oclfpga/aoc_help_pages/yeo1491314105959.html"}]}]}]}, {"type":"inst", "id":9, "name":"Load", "debug":[[{"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "line":78}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Burst-coalesced cached", "Stall-free":"No", "Start Cycle":"11", "Latency":"238", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"file:////glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/lib/oclfpga/aoc_help_pages/yeo1491314105959.html"}]}]}]}, {"type":"inst", "id":12, "name":"Loop Input", "debug":[[{"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "line":77}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"13"}]}, {"type":"inst", "id":13, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"257", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"257", "II":"n/a", "Subloops":"No", "Pipelined":"No", "Fmax Bottlenecks":"No", "Loop Info":"Loop is not pipelined. See Loops Analysis for more information."}]}]}, {"type":"memtype", "id":1, "name":"Global Memory", "children":[{"type":"memsys", "id":14, "name":"DDR", "details":[{"type":"table", "Number of banks":"2"}]}]}], "links":[{"from":13, "to":10}, {"from":6, "to":11}, {"from":7, "to":11}, {"from":13, "to":12}, {"from":3, "to":12}, {"from":8, "to":13}, {"from":9, "to":13}, {"from":10, "to":6}, {"from":6, "to":7}, {"from":12, "to":8}, {"from":12, "to":9}, {"from":14, "to":6}, {"from":7, "to":14}, {"from":14, "to":8}, {"from":14, "to":9}]};
var loopsJSON={"columns":["", "Pipelined", "II", "Speculated iterations", "Details"], "children":[{"name":"Kernel: MMpara_v1", "data":["", "", ""], "debug":[[{"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "line":72}]], "details":[{"type":"brief", "text":"ND-Range"}, {"type":"text", "text":"ND-Range"}, {"type":"text", "text":"Fmax bottlenck block: None"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"file:////glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/lib/oclfpga/aoc_help_pages/ipp1476408832230.html"}]}], "children":[{"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"accessor.hpp", "line":839}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}, {"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"accessor.hpp", "line":839}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}, {"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"accessor.hpp", "line":896}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}, {"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"accessor.hpp", "line":896}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}, {"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"accessor.hpp", "line":896}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}, {"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"accessor.hpp", "line":896}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}, {"name":"MMpara_v1.B2", "data":["No", "n/a", "n/a"], "debug":[[{"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "line":77}]], "details":[{"type":"brief", "text":"Thread capacity = 258"}, {"type":"text", "text":"Thread capacity = 258"}], "children":[{"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"accessor.hpp", "line":839}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}, {"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"accessor.hpp", "line":839}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}]}]}]};
var loop_attrJSON={"name":"loop_attributes", "id":70, "nodes":[{"name":"MMpara_v1", "id":1, "clk":"No", "fmax":"240.00", "type":"kernel", "children":[{"name":"MMpara_v1.B0", "id":2, "af":"240.00", "br":"0", "ci":"0", "fo":"Disabled", "ii":"1", "ll":"1", "lt":"0.000000", "mi":"n/a", "pl":"Yes", "tc":"0", "tn":"1", "type":"bb"}, {"name":"MMpara_v1.B2", "id":4, "af":"240.00", "br":"1", "ci":"0", "fo":"Disabled", "ii":"n/a", "ll":"1", "lt":"257.000000", "mi":"n/a", "pl":"No", "tc":"0", "tn":"1", "details":[{"type":"text", "text":"Hyper-Optimized loop structure: n/a"}], "debug":[[{"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "line":77}]], "type":"loop"}, {"name":"MMpara_v1.B1", "id":3, "af":"240.00", "br":"0", "ci":"0", "fo":"Disabled", "ii":"1", "ll":"1", "lt":"257.000000", "mi":"n/a", "pl":"Yes", "tc":"0", "tn":"1", "type":"bb"}]}]};
var summaryJSON={"performanceSummary":{"name":"Kernel Summary", "columns":["Kernel Name", "Kernel Type", "Autorun", "Workgroup Size", "# Compute Units"], "children":[{"name":"MMpara_v1", "data":["NDRange", "No", "n/a", 1], "details":[{"type":"text", "text":"Kernel type: NDRange"}, {"type":"text", "text":"The kernel does not use any work-group information (such as get_local_id() or get_group_id()).Local work-group size will be automatically modified to match global work-group size on launch.This is a hardware optimization."}], "debug":[[{"filename":"", "line":0}]]}]}, "estimatedResources":{"name":"Estimated Resource Usage", "columns":["Kernel Name", "ALUTs ", "FFs  ", "RAMs ", "DSPs ", "MLABs"], "children":[{"name":"MMpara_v1", "data":[10198, 16685, 108, 22, 71], "debug":[[{"filename":"", "line":0}]]}, {"name":"Global Interconnect", "classes":["summary-highlight", "nohover"], "data":[12524, 15522, 104, 0, 0]}, {"name":"Board Interface", "classes":["summary-highlight", "nohover"], "data":[179950, 358572, 492, 123, 0]}, {"name":"System description ROM", "classes":["summary-highlight", "nohover"], "data":[0, 67, 2, 0, 0]}, {"name":"Total", "classes":["summary-highlight", "nohover"], "data":[202672, 390846, 706, 145, 71], "data_percent":[23.721, 22.8725, 26.0229, 9.55204]}, {"name":"Available", "classes":["summary-highlight", "nohover"], "data":[854400, 1708800, 2713, 1518, 0]}]}, "compileWarnings":{"name":"Compile Warnings", "children":[{"name":"Load uses a Burst-coalesced cached LSU", "details":[{"type":"text", "text":"Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":973}, {"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "line":78}]]}, {"name":"Load uses a Burst-coalesced cached LSU", "details":[{"type":"text", "text":"Load with a private 512 kilobit cache. Cache is not shared with any other load. It is flushed on kernel start. Use Dynamic Profiler to verify cache effectiveness. Other kernels should not be updating the data in global memory while this kernel is using it. Cache is created when memory access pattern is data-dependent or appears to be repetitive. Simplify access pattern or mark pointer as \'volatile\' to disable generation of this cache."}], "debug":[[{"filename":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin-llvm/../include/sycl/CL/sycl/handler.hpp", "line":973}, {"filename":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "line":78}]]}]}};
var warningsJSON={"nodes":[]};
var fileJSON=[{"path":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/dev-utilities/2021.5.2/include/dpc_common.hpp", "name":"dpc_common.hpp", "has_active_debug_locs":false, "absName":"/glob/development-tools/versions/oneapi/2022.1.2/oneapi/dev-utilities/2021.5.2/include/dpc_common.hpp", "content":"// Copyright (C) 2020 Intel Corporation\u000A// SPDX-License-Identifier: MIT\u000A\u000A#ifndef _DP_HPP\u000A#define _DP_HPP\u000A\u000A#include <stdlib.h>\u000A#include <exception>\u000A\u000A#include <CL/sycl.hpp>\u000A\u000Anamespace dpc_common {\u000A// This exception handler will catch async exceptions\u000Astatic auto exception_handler = [](cl::sycl::exception_list eList) {\u000A  for (std::exception_ptr const &e : eList) {\u000A    try {\u000A      std::rethrow_exception(e);\u000A    } catch (std::exception const &e) {\u000A#if _DEBUG\u000A      std::cout << \"Failure\" << std::endl;\u000A#endif\u000A      std::terminate();\u000A    }\u000A  }\u000A};\u000A\u000A// The TimeInterval is a simple RAII class.\u000A// Construct the timer at the point you want to start timing.\u000A// Use the Elapsed() method to return time since construction.\u000A\u000Aclass TimeInterval {\u000A public:\u000A  TimeInterval() : start_(std::chrono::steady_clock::now()) {}\u000A\u000A  double Elapsed() {\u000A    auto now = std::chrono::steady_clock::now();\u000A    return std::chrono::duration_cast<Duration>(now - start_).count();\u000A  }\u000A\u000A private:\u000A  using Duration = std::chrono::duration<double>;\u000A  std::chrono::steady_clock::time_point start_;\u000A};\u000A\u000A};  // namespace dpc_common\u000A\u000A#endif\u000A"}, {"path":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "name":"matrix-multi-para-v1.cpp", "has_active_debug_locs":false, "absName":"/home/u132300/HC-Lab4/matrix-multi/build/src/matrix-multi-para-v1.cpp", "content":"//==============================================================\u000A// DPC++ Example\u000A//\u000A// Matrix Multiplication with DPC++\u000A//\u000A// Author: Yan Luo\u000A//\u000A// Copyright ©  2020-\u000A//\u000A// MIT License\u000A//\u000A#include <CL/sycl.hpp>\u000A#include <array>\u000A#include <iostream>\u000A#include \"dpc_common.hpp\"\u000A#if FPGA || FPGA_EMULATOR || FPGA_PROFILE\u000A#include <sycl/ext/intel/fpga_extensions.hpp>\u000A#endif\u000A\u000Ausing namespace sycl;\u000A\u000A// matrice shapes for this example.\u000A// A: a_rows x a_columns\u000A// B: a_columns x b_columns\u000A// C,Sum: a_rows x b_columns\u000Aconstexpr size_t a_rows = 800;\u000Aconstexpr size_t a_columns = 1600;\u000Aconstexpr size_t b_columns = 3200;\u000A\u000Aclass MMpara_v1;\u000A\u000Avoid MatrixMulti_para(queue &q, float (*matrix_a)[a_columns], float (*matrix_b)[b_columns], \u000A  float (*matrix_c)[b_columns], float (*matrix_d_parallel)[b_columns]) {\u000A\u000A  std::cout << \"MatrixMultiplication using parallel_for() v1.\" << std::endl;\u000A\u000A  // Create the range object for the arrays managed by the buffer.\u000A  range<2> num_items{a_rows, b_columns};\u000A\u000A  // Create buffers that hold the data shared between the host and the devices.\u000A  // The buffer destructor is responsible to copy the data back to host when it\u000A  // goes out of scope.\u000A  buffer<float, 2> a_buf(reinterpret_cast<float *>(matrix_a), range(a_rows, a_columns));\u000A  buffer<float, 2> b_buf(reinterpret_cast<float *>(matrix_b), range(a_columns, b_columns));\u000A  buffer<float, 2> c_buf(reinterpret_cast<float *>(matrix_c), num_items);\u000A  buffer<float, 2> sum_buf(reinterpret_cast<float *>(matrix_d_parallel), num_items);\u000A\u000A  // Submit a command group to the queue by a lambda function that contains the\u000A  // data access permission and device computation (kernel).\u000A  event e = q.submit([&](handler &h) {\u000A    // Create an accessor for each buffer with access permission: read, write or\u000A    // read/write. The accessor is a mean to access the memory in the buffer.\u000A    auto a = a_buf.get_access<access::mode::read, access::target::global_buffer>(h);\u000A    auto b = b_buf.get_access<access::mode::read, access::target::global_buffer>(h);\u000A    auto c = c_buf.get_access<access::mode::read, access::target::global_buffer>(h);\u000A\u000A    // The sum_accessor is used to store (with write permission) the sum data.\u000A    auto sum = sum_buf.get_access<access::mode::write>(h);\u000A  \u000A    // Use parallel_for to run vector addition in parallel on device. This\u000A    // executes the kernel.\u000A    // 1st parameter is the number of work items in total and in a workgroup\u000A    //    In our case, we have a two-dimensional nd_range:\u000A    //    num_items: the global size, or 'all' the work in 2D, i.e. the size\u000A    //                   of the matrix Sum in 'row' and 'column' dimensions\u000A    //    range<2>(1,1) : the workgroup size. (1,1) means a workgroup has 1 work item \u000A    //                    in each dimension \u000A    // 2nd parameter is the kernel, a lambda that specifies what to do per\u000A    //    work item. The parameter of the lambda is the work item id.\u000A    // DPC++ supports unnamed lambda kernel by default.\u000A    auto kernel_range = nd_range<2>(num_items, range<2>(1,1));\u000A    h.parallel_for<MMpara_v1>(num_items, [=](id<2> i) \u000A      { size_t row = i[0], col = i[1];\u000A\u000A        float s = 0;\u000A        //#pragma unroll 2\u000A        for (size_t k = 0; k < a_columns; k++)\u000A          s += a[row][k] * b[k][col]; \u000A\u000A        sum[row][col]  = c[row][col] + s;\u000A      });\u000A  });\u000A\u000A#if FPGA || FPGA_PROFILE\u000A  // Query event e for kernel profiling information\u000A  // (blocks until command groups associated with e complete)\u000A  double kernel_time_ns =\u000A    e.get_profiling_info<info::event_profiling::command_end>() -\u000A    e.get_profiling_info<info::event_profiling::command_start>();\u000A\u000A  // Report profiling info\u000A  std::cout << \"Kernel compute time:  \" << kernel_time_ns * 1e-6 << \" ms\\n\";\u000A#endif\u000A}\u000A\u000A//************************************\u000A// Demonstrate matrix multiplication both in sequential on CPU and in parallel on device.\u000A//************************************\u000Aint main() {\u000A  // Create device selector for the device of your interest.\u000A#if FPGA_EMULATOR\u000A  // DPC++ extension: FPGA emulator selector on systems without FPGA card.\u000A  ext::intel::fpga_emulator_selector d_selector;\u000A#elif defined(FPGA) || defined(FPGA_PROFILE)\u000A  // DPC++ extension: FPGA selector on systems with FPGA card.\u000A  ext::intel::fpga_selector d_selector;\u000A#else\u000A  // The default device selector will select the most performant device.\u000A  default_selector d_selector;\u000A  //cpu_selector d_selector;\u000A#endif\u000A\u000A  // Query about the platform\u000A  //\u000A  unsigned number = 0;\u000A  auto myPlatforms = platform::get_platforms();\u000A  // loop through the platforms to poke into\u000A  for (auto &onePlatform : myPlatforms) {\u000A    std::cout << ++number << \" found ..\" << std::endl << \"Platform: \" \u000A    << onePlatform.get_info<info::platform::name>() <<std::endl;\u000A    // loop through the devices\u000A    auto myDevices = onePlatform.get_devices();\u000A    for (auto &oneDevice : myDevices) {\u000A      std::cout << \"Device: \" \u000A      << oneDevice.get_info<info::device::name>() <<std::endl;\u000A    }\u000A  }\u000A  std::cout << std::endl;\u000A\u000A  // Create matrices with row, column and initial value \u000A  // to store the input and output data.\u000A  float(*A)[a_columns] = new float[a_rows][a_columns];\u000A  // Intialize values\u000A  for (int i = 0; i < a_rows; i++)\u000A    for (int j = 0; j < a_columns; j++) A[i][j] = 1.0;\u000A\u000A  float(*B)[b_columns] = new float[a_columns][b_columns];\u000A  // Intialize values\u000A  for (int i = 0; i < a_columns; i++)\u000A    for (int j = 0; j < b_columns; j++) B[i][j] = 2.0;\u000A\u000A  float(*C)[b_columns] = new float[a_rows][b_columns];\u000A  // Intialize values\u000A  for (int i = 0; i < a_rows; i++)\u000A    for (int j = 0; j < b_columns; j++) C[i][j] = 3.0;\u000A\u000A  float(*sum_sequential)[b_columns] = new float[a_rows][b_columns];\u000A  float(*sum_parallel)[b_columns] = new float[a_rows][b_columns];\u000A  // Intialize values\u000A  for (int i = 0; i < a_rows; i++)\u000A    for (int j = 0; j < b_columns; j++) {\u000A      sum_sequential[i][j] = 0.0;\u000A      sum_parallel[i][j] = 0.0;\u000A    }\u000A\u000A  std::cout << \"Matrix A size: \" << a_rows << \",\" << a_columns << std::endl;\u000A  std::cout << \"Matrix B size: \" << a_columns << \",\" << b_columns << std::endl;\u000A  std::cout << \"Matrices C, D size: \" << a_rows << \",\" \u000A              << b_columns << std::endl;\u000A\u000A#ifndef FPGA_PROFILE\u000A  // Start the timer (using std::chrono)\u000A  dpc_common::TimeInterval exec_time;    \u000A\u000A  // Compute the sum of two arrays in sequential for validation.\u000A  std::cout << \"computing on host...\" << std::endl;\u000A  for (size_t i = 0; i < a_rows; i++)\u000A    for (size_t j = 0; j < b_columns; j++) {\u000A      sum_sequential[i][j] = C[i][j];\u000A      for (size_t k = 0; k < a_columns; k++)\u000A        sum_sequential[i][j] += A[i][k] * B[k][j];\u000A    }\u000A\u000A  double host_time_s = exec_time.Elapsed();\u000A  std::cout << \"host compute time \" << host_time_s * 1000 << \" ms\\n\";\u000A#endif\u000A\u000A  try {\u000A    queue q(d_selector, dpc_common::exception_handler, \u000A            property::queue::enable_profiling{});\u000A\u000A    // Print out the device information used for the kernel code.\u000A    std::cout << \"Running on device: \"\u000A              << q.get_device().get_info<info::device::name>() << \"\\n\";\u000A\u000A\u000A    // Matrix multiplication in DPC++\u000A    MatrixMulti_para(q, A, B, C, sum_parallel);\u000A\u000A#ifndef FPGA_PROFILE\u000A    // Verify that the two arrays are equal.\u000A    for (size_t i = 0; i < a_rows; i++)\u000A      for (size_t j = 0; j < b_columns; j++) \u000A        if( abs(sum_sequential[i][j] - sum_parallel[i][j]) > 0.0001) {\u000A          std::cout << \"not equal\" << std::endl;\u000A          return -1;\u000A        }\u000A    std::cout << \"Matrix multiplication successfully completed on device.\\n\";\u000A#endif\u000A\u000A  } catch (exception const &e) {\u000A    std::cout << \"An exception is caught for matrix multiplication.\\n\";\u000A    std::terminate();\u000A  }\u000A\u000A  return 0;\u000A}\u000A"}];
var alpha_viewer=false;